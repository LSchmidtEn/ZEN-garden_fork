[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "zen_garden"
authors = [
  {name = "Jacob Mannhardt", email = "zen-garden@ethz.ch"},
  {name = "Alissa Ganter"},
  {name = "Johannes Burger"},
  {name = "Francesco De Marco"},
  {name = "Lukas Kunz"},
  {name = "Lukas Schmidt-Engelbertz"},
  {name = "Paolo Gabrielli"},
  {name = "Giovanni Sansavini"},
  ]
# do not change version manually! Done by bump2version
version = "2.2.6"
requires-python= ">=3.11"
description="ZEN-garden is an optimization model of energy systems and value chains."
readme = "README.md"
license = { file = "LICENSE.txt" }

dependencies = [
    "xarray",
    "cython",
    "numpy<=1.26.4",
    "pandas>=2.2",
    "scipy<=1.14",
    "pint",
    "tables",
    "pydantic",
    "tsam",
    "h5py",
    "filelock",
    "ordered-set",
    "pyogrio",
    "psutil",
    "linopy<=0.3.10",
    "requests",
    "ipykernel",
    "zen-temple"
]

[project.optional-dependencies]
docs = [
    "sphinx==7.3.7",
    "myst-parser==3.0.1",
    "sphinx-book-theme==1.1.3",
    "pydata-sphinx-theme==0.15.4",
    "sphinx-reredirects==0.1.4",
    "nbsphinx==0.9.4",
    "nbsphinx-link==1.3.0",
]

dev = [
    "pytest",
    "coverage",
]

vis = [
    "matplotlib",
]

gurobipy = ["gurobipy"]

[project.urls]
Homepage = "https://github.com/ZEN-universe/ZEN-garden"
Documentation = "https://zen-garden.readthedocs.io/en/latest/"
Zenodo = "https://zenodo.org/api/records/13385110"



[tool.git-cliff.changelog]
header = "### Changelog"
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% macro print_commit(commit) -%}
    - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
        {% if commit.breaking %}[**breaking**] {% endif %}\
        {{ commit.message }} - \
        ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))\
{% endmacro -%}

{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]\
          ({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor %}
    {% for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::print_commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endfor -%}
{%- if github -%}
{% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
  ## New Contributors ❤️
{% endif %}\
{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
  * @{{ contributor.username }} made their first contribution
    {%- if contributor.pr_number %} in \
      [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
    {%- endif %}
{%- endfor -%}
{%- endif %}
"""
trim = true
footer = "<!-- generated by git-cliff -->"
# see [changelog] section for more keys

[tool.git-cliff.git]
conventional_commits = true
filter_unconventional = false
commit_parsers = [
    { message = "^feat", group = "New Features"},
    { message = "^docs", group = "Documentation"},
    { message = ".*Docs", group = "Documentation"},
    { message = "^bug", group = "Bug"},
    { message = "^deprecation", group = "Deprecation"},
    { message = "^removal", group = "Removal"},
    { message = "^enhancement", group = "Enhancement"},
    { field = "github.pr_labels", pattern = "breaking-change", group = "<!-- 0 --> 🏗️ Breaking changes" },
    { field = "github.pr_labels", pattern = "type/enhancement", group = "<!-- 1 --> 🚀 Features" },
    { field = "github.pr_labels", pattern = "type/bug", group = "<!-- 2 --> 🐛 Fixes" },
    { field = "github.pr_labels", pattern = "type/update", group = "<!-- 3 --> 🧪 Dependencies" },
    { field = "github.pr_labels", pattern = "type/refactor", group = "<!-- 4 --> 🏭 Refactor" },
    { field = "github.pr_title", message = ".*docs", group = "<!-- 5 --> 📝 Documentation" }
    #{ field = "github.pr_labels", pattern = ".*", group = "<!-- 6 --> 🌀 Miscellaneous" }
]
filter_commits = true
#commit_preprocessors = [
#    { pattern = '^[^/]+/', replace = ""}
#]
# see [git] section for more keys
